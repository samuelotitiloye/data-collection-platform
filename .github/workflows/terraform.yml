name: terraform
on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'network/**'
      - '.github/workflows/terraform.yml'
  push:
    branches: [ "main" ]
    paths:
      - 'network/**'

permissions:
  id-token: write   # for GitHub OIDC
  contents: read

env:
  AWS_REGION: us-east-2
  TF_IN_AUTOMATION: "true"
  TF_CLI_ARGS: "-no-color"

jobs:
  plan:
    name: Plan (network)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: network
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-${{ github.run_id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config=backend.hcl.example

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: network/tfplan

  apply:
    name: Apply (network)
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: prod-approval   # add a required reviewer in repo settings to set a gate
    defaults:
      run:
        working-directory: network
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-${{ github.run_id }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config=backend.hcl.example

      - name: Terraform Apply
        run: terraform apply -auto-approve
